{"cells":[{"cell_type":"markdown","metadata":{"id":"TyvV3n_3e7UI"},"source":["## Aspect semtiment "]},{"cell_type":"markdown","source":["# New section"],"metadata":{"id":"Z6haU_x4zqtb"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"0-tx_AuEe7UK"},"outputs":[],"source":["import re\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import numpy as np\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"spy5De32e7UL","executionInfo":{"status":"error","timestamp":1661170615754,"user_tz":-180,"elapsed":623,"user":{"displayName":"saroar jahan","userId":"12276237436924535627"}},"outputId":"6e6e25c0-d86f-40a2-c7a3-c58346cfb508","colab":{"base_uri":"https://localhost:8080/","height":345}},"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-e50eb600ef62>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mpos_bert_aspects\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"df_positive_tweets_with_BERT_ASPECT.csv\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;31m# neg_bert_aspects=pd.read_csv(\"clean_df_negative_aspects.csv\")\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mneg_bert_aspect_complete\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"clean_df_negative_aspects.csv\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    309\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstacklevel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    310\u001b[0m                 )\n\u001b[0;32m--> 311\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    312\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    313\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\u001b[0m\n\u001b[1;32m    584\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    585\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 586\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    587\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    588\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    480\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    481\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 482\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    483\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    484\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m    809\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    810\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 811\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    812\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    813\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, engine)\u001b[0m\n\u001b[1;32m   1038\u001b[0m             )\n\u001b[1;32m   1039\u001b[0m         \u001b[0;31m# error: Too many arguments for \"ParserBase\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1040\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mmapping\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[call-arg]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1041\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1042\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_failover_to_python\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/c_parser_wrapper.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, src, **kwds)\u001b[0m\n\u001b[1;32m     49\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     50\u001b[0m         \u001b[0;31m# open handles\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 51\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_open_handles\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msrc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     52\u001b[0m         \u001b[0;32massert\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     53\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers/base_parser.py\u001b[0m in \u001b[0;36m_open_handles\u001b[0;34m(self, src, kwds)\u001b[0m\n\u001b[1;32m    227\u001b[0m             \u001b[0mmemory_map\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"memory_map\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    228\u001b[0m             \u001b[0mstorage_options\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"storage_options\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 229\u001b[0;31m             \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"encoding_errors\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"strict\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    230\u001b[0m         )\n\u001b[1;32m    231\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    705\u001b[0m                 \u001b[0mencoding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    706\u001b[0m                 \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 707\u001b[0;31m                 \u001b[0mnewline\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    708\u001b[0m             )\n\u001b[1;32m    709\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'df_positive_tweets_with_BERT_ASPECT.csv'"]}],"source":["pos_bert_aspects=pd.read_csv(\"df_positive_tweets_with_BERT_ASPECT.csv\")\n","# neg_bert_aspects=pd.read_csv(\"clean_df_negative_aspects.csv\")\n","neg_bert_aspect_complete=pd.read_csv(\"/content/clean_df_negative_aspects.csv\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ll9zHkfUe7UN"},"outputs":[],"source":["# neg_bert_aspect_complete=pd.concat([neg_bert_aspects, extra_neg_bert_aspects], ignore_index=True, sort=False)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YiTNf8cqe7UN"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6IZjdwNme7UO"},"outputs":[],"source":["#df_positive_tweets_with_BERT_ASPECT (1).csv\n","#clean_df_negative_aspects.csv\n","#clean_df_EXTRA_negative_aspects.csv"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"C9un9JWFe7UP"},"outputs":[],"source":["#The <service:Positive> is great - LRB - maybe even borderline nagging but at least you get attention - RRB - ,\n","#the <desserts:Positive> are excellent and the <coffee:Positive> is so very good . . .\n"]},{"cell_type":"markdown","metadata":{"id":"SeTqhCSwe7UP"},"source":["1-- The  Model is bert uncased from Microsoft called microsoft/mdeberta-v3-base, improved from  improves the BERT and RoBERTa models.\n","\n","2-- The model was fine tunned on inline reviews from restaurants for aspects sentiment. \n","\n","    >> The model does first the aspect extraction.\n","    \n","    >> Then, sentiment classification. \n","\n","3-- Inefrence model was made.  \n","\n","    >> Each tweet is considered as a review and the aspect sentiment is applied. \n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JQUxGdLpe7UQ","outputId":"41f724e6-1ba3-478c-dfc7-5f3e7d8a227c"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>sentence</th>\n","      <th>IOB</th>\n","      <th>tokens</th>\n","      <th>aspect</th>\n","      <th>position</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9</td>\n","      <td>no offense of any sort is intended in this que...</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...</td>\n","      <td>['no', 'offense', 'of', 'any', 'sort', 'is', '...</td>\n","      <td>['sex']</td>\n","      <td>[[20]]</td>\n","      <td>['Negative']</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>19</td>\n","      <td>if i were about the size of a pill and you cam...</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...</td>\n","      <td>['if', 'i', 'were', 'about', 'the', 'size', 'o...</td>\n","      <td>['food']</td>\n","      <td>[[18]]</td>\n","      <td>['Neutral']</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>47</td>\n","      <td>what is your best feature</td>\n","      <td>['O', 'O', 'O', 'O', 'B-ASP']</td>\n","      <td>['what', 'is', 'your', 'best', 'feature']</td>\n","      <td>['feature']</td>\n","      <td>[[5]]</td>\n","      <td>['Positive']</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>55</td>\n","      <td>whats green and smells like bacon kermits fingers</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'B-ASP', 'O', 'O']</td>\n","      <td>['whats', 'green', 'and', 'smells', 'like', 'b...</td>\n","      <td>['bacon']</td>\n","      <td>[[6]]</td>\n","      <td>['Negative']</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>133</td>\n","      <td>i think so we need meat to survive as part of ...</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...</td>\n","      <td>['i', 'think', 'so', 'we', 'need', 'meat', 'to...</td>\n","      <td>['food']</td>\n","      <td>[[13]]</td>\n","      <td>['Neutral']</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>143</td>\n","      <td>hell no but yeah probably because there are mo...</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...</td>\n","      <td>['hell', 'no', 'but', 'yeah', 'probably', 'bec...</td>\n","      <td>['activities']</td>\n","      <td>[[10]]</td>\n","      <td>['Positive']</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>158</td>\n","      <td>you ' re planning a nice dinner party but coul...</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'O', 'B-ASP', 'I-ASP...</td>\n","      <td>['you', \"'\", 're', 'planning', 'a', 'nice', 'd...</td>\n","      <td>['dinner party']</td>\n","      <td>[[7, 8]]</td>\n","      <td>['Positive']</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>167</td>\n","      <td>is restricting bathroom use a good punishment ...</td>\n","      <td>['O', 'O', 'B-ASP', 'O', 'O', 'O', 'O', 'O', 'O']</td>\n","      <td>['is', 'restricting', 'bathroom', 'use', 'a', ...</td>\n","      <td>['bathroom']</td>\n","      <td>[[3]]</td>\n","      <td>['Neutral']</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>193</td>\n","      <td>would you ever try the blueberry gum off of ch...</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...</td>\n","      <td>['would', 'you', 'ever', 'try', 'the', 'bluebe...</td>\n","      <td>['chocolate']</td>\n","      <td>[[13]]</td>\n","      <td>['Neutral']</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>215</td>\n","      <td>the lego batman or ben affleck ' s batman</td>\n","      <td>['O', 'O', 'B-ASP', 'O', 'O', 'O', 'O', 'O', '...</td>\n","      <td>['the', 'lego', 'batman', 'or', 'ben', 'afflec...</td>\n","      <td>['batman', 'batman']</td>\n","      <td>[[3], [9]]</td>\n","      <td>['Neutral', 'Neutral']</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>236</td>\n","      <td>today i learned that my cats have already star...</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...</td>\n","      <td>['today', 'i', 'learned', 'that', 'my', 'cats'...</td>\n","      <td>['curtains']</td>\n","      <td>[[18]]</td>\n","      <td>['Negative']</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>250</td>\n","      <td>fortnite sims fortnite i dont play many online...</td>\n","      <td>['B-ASP', 'O', 'O', 'O', 'O', 'O', 'O', 'O', '...</td>\n","      <td>['fortnite', 'sims', 'fortnite', 'i', 'dont', ...</td>\n","      <td>['fortnite']</td>\n","      <td>[[1]]</td>\n","      <td>['Neutral']</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>265</td>\n","      <td>touchy brakes suck haha how did u handle them</td>\n","      <td>['O', 'B-ASP', 'O', 'O', 'O', 'O', 'O', 'O', 'O']</td>\n","      <td>['touchy', 'brakes', 'suck', 'haha', 'how', 'd...</td>\n","      <td>['brakes']</td>\n","      <td>[[2]]</td>\n","      <td>['Negative']</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>332</td>\n","      <td>if i invited you to a party with lots of lesbi...</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...</td>\n","      <td>['if', 'i', 'invited', 'you', 'to', 'a', 'part...</td>\n","      <td>['food']</td>\n","      <td>[[17]]</td>\n","      <td>['Negative']</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>417</td>\n","      <td>why are some men thin and others fat although ...</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...</td>\n","      <td>['why', 'are', 'some', 'men', 'thin', 'and', '...</td>\n","      <td>['pasta']</td>\n","      <td>[[14]]</td>\n","      <td>['Neutral']</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Unnamed: 0                                           sentence  \\\n","0            9  no offense of any sort is intended in this que...   \n","1           19  if i were about the size of a pill and you cam...   \n","2           47                          what is your best feature   \n","3           55  whats green and smells like bacon kermits fingers   \n","4          133  i think so we need meat to survive as part of ...   \n","5          143  hell no but yeah probably because there are mo...   \n","6          158  you ' re planning a nice dinner party but coul...   \n","7          167  is restricting bathroom use a good punishment ...   \n","8          193  would you ever try the blueberry gum off of ch...   \n","9          215          the lego batman or ben affleck ' s batman   \n","10         236  today i learned that my cats have already star...   \n","11         250  fortnite sims fortnite i dont play many online...   \n","12         265      touchy brakes suck haha how did u handle them   \n","13         332  if i invited you to a party with lots of lesbi...   \n","14         417  why are some men thin and others fat although ...   \n","\n","                                                  IOB  \\\n","0   ['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...   \n","1   ['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...   \n","2                       ['O', 'O', 'O', 'O', 'B-ASP']   \n","3        ['O', 'O', 'O', 'O', 'O', 'B-ASP', 'O', 'O']   \n","4   ['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...   \n","5   ['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...   \n","6   ['O', 'O', 'O', 'O', 'O', 'O', 'B-ASP', 'I-ASP...   \n","7   ['O', 'O', 'B-ASP', 'O', 'O', 'O', 'O', 'O', 'O']   \n","8   ['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...   \n","9   ['O', 'O', 'B-ASP', 'O', 'O', 'O', 'O', 'O', '...   \n","10  ['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...   \n","11  ['B-ASP', 'O', 'O', 'O', 'O', 'O', 'O', 'O', '...   \n","12  ['O', 'B-ASP', 'O', 'O', 'O', 'O', 'O', 'O', 'O']   \n","13  ['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...   \n","14  ['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...   \n","\n","                                               tokens                aspect  \\\n","0   ['no', 'offense', 'of', 'any', 'sort', 'is', '...               ['sex']   \n","1   ['if', 'i', 'were', 'about', 'the', 'size', 'o...              ['food']   \n","2           ['what', 'is', 'your', 'best', 'feature']           ['feature']   \n","3   ['whats', 'green', 'and', 'smells', 'like', 'b...             ['bacon']   \n","4   ['i', 'think', 'so', 'we', 'need', 'meat', 'to...              ['food']   \n","5   ['hell', 'no', 'but', 'yeah', 'probably', 'bec...        ['activities']   \n","6   ['you', \"'\", 're', 'planning', 'a', 'nice', 'd...      ['dinner party']   \n","7   ['is', 'restricting', 'bathroom', 'use', 'a', ...          ['bathroom']   \n","8   ['would', 'you', 'ever', 'try', 'the', 'bluebe...         ['chocolate']   \n","9   ['the', 'lego', 'batman', 'or', 'ben', 'afflec...  ['batman', 'batman']   \n","10  ['today', 'i', 'learned', 'that', 'my', 'cats'...          ['curtains']   \n","11  ['fortnite', 'sims', 'fortnite', 'i', 'dont', ...          ['fortnite']   \n","12  ['touchy', 'brakes', 'suck', 'haha', 'how', 'd...            ['brakes']   \n","13  ['if', 'i', 'invited', 'you', 'to', 'a', 'part...              ['food']   \n","14  ['why', 'are', 'some', 'men', 'thin', 'and', '...             ['pasta']   \n","\n","      position               sentiment  \n","0       [[20]]            ['Negative']  \n","1       [[18]]             ['Neutral']  \n","2        [[5]]            ['Positive']  \n","3        [[6]]            ['Negative']  \n","4       [[13]]             ['Neutral']  \n","5       [[10]]            ['Positive']  \n","6     [[7, 8]]            ['Positive']  \n","7        [[3]]             ['Neutral']  \n","8       [[13]]             ['Neutral']  \n","9   [[3], [9]]  ['Neutral', 'Neutral']  \n","10      [[18]]            ['Negative']  \n","11       [[1]]             ['Neutral']  \n","12       [[2]]            ['Negative']  \n","13      [[17]]            ['Negative']  \n","14      [[14]]             ['Neutral']  "]},"execution_count":123,"metadata":{},"output_type":"execute_result"}],"source":["pos_bert_aspects.head(15)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ChH0jQOAe7UR","outputId":"e30728d8-40b0-4a09-f3b2-1239cce6b745"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>sentence</th>\n","      <th>IOB</th>\n","      <th>tokens</th>\n","      <th>aspect</th>\n","      <th>position</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8</td>\n","      <td>what is your favorite sex position</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'B-ASP']</td>\n","      <td>['what', 'is', 'your', 'favorite', 'sex', 'pos...</td>\n","      <td>['position']</td>\n","      <td>[[6]]</td>\n","      <td>['Positive']</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>11</td>\n","      <td>guessing the sex was really boring then</td>\n","      <td>['O', 'O', 'B-ASP', 'O', 'O', 'O', 'O']</td>\n","      <td>['guessing', 'the', 'sex', 'was', 'really', 'b...</td>\n","      <td>['sex']</td>\n","      <td>[[3]]</td>\n","      <td>['Negative']</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>43</td>\n","      <td>did allan make you eat mayonnaise</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'B-ASP']</td>\n","      <td>['did', 'allan', 'make', 'you', 'eat', 'mayonn...</td>\n","      <td>['mayonnaise']</td>\n","      <td>[[6]]</td>\n","      <td>['Neutral']</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>47</td>\n","      <td>would you rather suck dick or gargle a cup ful...</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-AS...</td>\n","      <td>['would', 'you', 'rather', 'suck', 'dick', 'or...</td>\n","      <td>['cup']</td>\n","      <td>[[9]]</td>\n","      <td>['Negative']</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>48</td>\n","      <td>you ' re sick i ' ll gargle the mayonnaise gross</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...</td>\n","      <td>['you', \"'\", 're', 'sick', 'i', \"'\", 'll', 'ga...</td>\n","      <td>['mayonnaise']</td>\n","      <td>[[10]]</td>\n","      <td>['Negative']</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>53</td>\n","      <td>lol thanks for caring don ' t worry i ' m stil...</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...</td>\n","      <td>['lol', 'thanks', 'for', 'caring', 'don', \"'\",...</td>\n","      <td>['brakes']</td>\n","      <td>[[30]]</td>\n","      <td>['Negative']</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>93</td>\n","      <td>premade starbucks drinks like a good basic laz...</td>\n","      <td>['O', 'O', 'B-ASP', 'O', 'O', 'O', 'O', 'O', '...</td>\n","      <td>['premade', 'starbucks', 'drinks', 'like', 'a'...</td>\n","      <td>['drinks']</td>\n","      <td>[[3]]</td>\n","      <td>['Neutral']</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>114</td>\n","      <td>do you ever find that you get a little too agg...</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...</td>\n","      <td>['do', 'you', 'ever', 'find', 'that', 'you', '...</td>\n","      <td>['hood']</td>\n","      <td>[[15]]</td>\n","      <td>['Negative']</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>148</td>\n","      <td>any gay or lesbian people around over 21 pleas...</td>\n","      <td>['O', 'O', 'O', 'B-ASP', 'O', 'O', 'O', 'O', '...</td>\n","      <td>['any', 'gay', 'or', 'lesbian', 'people', 'aro...</td>\n","      <td>['lesbian', 'or lesbian']</td>\n","      <td>[[4], [13, 14]]</td>\n","      <td>['Positive', 'Positive']</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>153</td>\n","      <td>what does nigga means you black nigga</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'O', 'B-ASP']</td>\n","      <td>['what', 'does', 'nigga', 'means', 'you', 'bla...</td>\n","      <td>['nigga']</td>\n","      <td>[[7]]</td>\n","      <td>['Neutral']</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>171</td>\n","      <td>on average how many drinks does it take on a t...</td>\n","      <td>['O', 'O', 'O', 'O', 'B-ASP', 'O', 'O', 'O', '...</td>\n","      <td>['on', 'average', 'how', 'many', 'drinks', 'do...</td>\n","      <td>['drinks']</td>\n","      <td>[[5]]</td>\n","      <td>['Positive']</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>205</td>\n","      <td>sassy until someone walks up to you with a saw...</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...</td>\n","      <td>['sassy', 'until', 'someone', 'walks', 'up', '...</td>\n","      <td>['sawed off shotgun']</td>\n","      <td>[[10, 11, 12]]</td>\n","      <td>['Negative']</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>209</td>\n","      <td>the only meat you eat is dick</td>\n","      <td>['O', 'O', 'B-ASP', 'O', 'O', 'O', 'O']</td>\n","      <td>['the', 'only', 'meat', 'you', 'eat', 'is', 'd...</td>\n","      <td>['meat']</td>\n","      <td>[[3]]</td>\n","      <td>['Neutral']</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>211</td>\n","      <td>ur butt is kinda small js</td>\n","      <td>['O', 'B-ASP', 'O', 'O', 'O', 'O']</td>\n","      <td>['ur', 'butt', 'is', 'kinda', 'small', 'js']</td>\n","      <td>['butt']</td>\n","      <td>[[2]]</td>\n","      <td>['Negative']</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>226</td>\n","      <td>what does it mean if a girl puts her ass into ...</td>\n","      <td>['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...</td>\n","      <td>['what', 'does', 'it', 'mean', 'if', 'a', 'gir...</td>\n","      <td>['floor']</td>\n","      <td>[[21]]</td>\n","      <td>['Neutral']</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Unnamed: 0                                           sentence  \\\n","0            8                 what is your favorite sex position   \n","1           11            guessing the sex was really boring then   \n","2           43                  did allan make you eat mayonnaise   \n","3           47  would you rather suck dick or gargle a cup ful...   \n","4           48   you ' re sick i ' ll gargle the mayonnaise gross   \n","5           53  lol thanks for caring don ' t worry i ' m stil...   \n","6           93  premade starbucks drinks like a good basic laz...   \n","7          114  do you ever find that you get a little too agg...   \n","8          148  any gay or lesbian people around over 21 pleas...   \n","9          153              what does nigga means you black nigga   \n","10         171  on average how many drinks does it take on a t...   \n","11         205  sassy until someone walks up to you with a saw...   \n","12         209                      the only meat you eat is dick   \n","13         211                          ur butt is kinda small js   \n","14         226  what does it mean if a girl puts her ass into ...   \n","\n","                                                  IOB  \\\n","0                  ['O', 'O', 'O', 'O', 'O', 'B-ASP']   \n","1             ['O', 'O', 'B-ASP', 'O', 'O', 'O', 'O']   \n","2                  ['O', 'O', 'O', 'O', 'O', 'B-ASP']   \n","3   ['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'B-AS...   \n","4   ['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...   \n","5   ['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...   \n","6   ['O', 'O', 'B-ASP', 'O', 'O', 'O', 'O', 'O', '...   \n","7   ['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...   \n","8   ['O', 'O', 'O', 'B-ASP', 'O', 'O', 'O', 'O', '...   \n","9             ['O', 'O', 'O', 'O', 'O', 'O', 'B-ASP']   \n","10  ['O', 'O', 'O', 'O', 'B-ASP', 'O', 'O', 'O', '...   \n","11  ['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...   \n","12            ['O', 'O', 'B-ASP', 'O', 'O', 'O', 'O']   \n","13                 ['O', 'B-ASP', 'O', 'O', 'O', 'O']   \n","14  ['O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', ...   \n","\n","                                               tokens  \\\n","0   ['what', 'is', 'your', 'favorite', 'sex', 'pos...   \n","1   ['guessing', 'the', 'sex', 'was', 'really', 'b...   \n","2   ['did', 'allan', 'make', 'you', 'eat', 'mayonn...   \n","3   ['would', 'you', 'rather', 'suck', 'dick', 'or...   \n","4   ['you', \"'\", 're', 'sick', 'i', \"'\", 'll', 'ga...   \n","5   ['lol', 'thanks', 'for', 'caring', 'don', \"'\",...   \n","6   ['premade', 'starbucks', 'drinks', 'like', 'a'...   \n","7   ['do', 'you', 'ever', 'find', 'that', 'you', '...   \n","8   ['any', 'gay', 'or', 'lesbian', 'people', 'aro...   \n","9   ['what', 'does', 'nigga', 'means', 'you', 'bla...   \n","10  ['on', 'average', 'how', 'many', 'drinks', 'do...   \n","11  ['sassy', 'until', 'someone', 'walks', 'up', '...   \n","12  ['the', 'only', 'meat', 'you', 'eat', 'is', 'd...   \n","13       ['ur', 'butt', 'is', 'kinda', 'small', 'js']   \n","14  ['what', 'does', 'it', 'mean', 'if', 'a', 'gir...   \n","\n","                       aspect         position                 sentiment  \n","0                ['position']            [[6]]              ['Positive']  \n","1                     ['sex']            [[3]]              ['Negative']  \n","2              ['mayonnaise']            [[6]]               ['Neutral']  \n","3                     ['cup']            [[9]]              ['Negative']  \n","4              ['mayonnaise']           [[10]]              ['Negative']  \n","5                  ['brakes']           [[30]]              ['Negative']  \n","6                  ['drinks']            [[3]]               ['Neutral']  \n","7                    ['hood']           [[15]]              ['Negative']  \n","8   ['lesbian', 'or lesbian']  [[4], [13, 14]]  ['Positive', 'Positive']  \n","9                   ['nigga']            [[7]]               ['Neutral']  \n","10                 ['drinks']            [[5]]              ['Positive']  \n","11      ['sawed off shotgun']   [[10, 11, 12]]              ['Negative']  \n","12                   ['meat']            [[3]]               ['Neutral']  \n","13                   ['butt']            [[2]]              ['Negative']  \n","14                  ['floor']           [[21]]               ['Neutral']  "]},"execution_count":124,"metadata":{},"output_type":"execute_result"}],"source":["neg_bert_aspect_complete.head(15)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pmkcCmqCe7US"},"outputs":[],"source":["def Convert(string):\n","    li = list(string.split(\",\"))\n","    return li"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mPXk4Xn3e7UT"},"outputs":[],"source":["aspects_list=[]\n","sentiments_list=[]\n","for i in pos_bert_aspects.index:\n","    aspects= pos_bert_aspects.loc[i,\"aspect\"] \n","    aspects= aspects.replace('[','').replace(']','')\n","    aspects= aspects.replace('\"','')\n","    aspects=aspects.split(\",\")\n","    #aspects= aspects.replace('\"','')\n","    aspects=[i.replace('\"','') for i in aspects ]\n","    sentiments= pos_bert_aspects.loc[i,\"sentiment\"]\n","    sentiments= sentiments.replace('[','').replace(']','')\n","    sentiments= sentiments.replace('\"','')\n","    sentiments=sentiments.split(\",\")\n","    #sentiments= sentiments.replace('\"','')\n","    sentiments=[i.replace('\"','') for i in sentiments ]\n","    for j in aspects:\n","        j= j.replace('\"','')\n","        j= j.replace(\"'\",'')\n","        j=j.replace(\" \", \"\")\n","        for t in sentiments:\n","            t= t.replace('\"','')\n","            t= t.replace(\"'\",'')\n","            t=t.replace(\" \", \"\")\n","            aspects_list.append(j)\n","            sentiments_list.append(t)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-uSE02dle7UT","outputId":"2fef3f4c-b076-4b18-d0d0-0346e78fb2dd"},"outputs":[{"name":"stdout","output_type":"stream","text":["# Number of Positive aspect: 461\n"]}],"source":["print('# Number of Positive aspect:', len(aspects_list))\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4xzeGU7we7UU","outputId":"2fbb9091-cc61-4abe-b315-44d334f046f0"},"outputs":[{"name":"stdout","output_type":"stream","text":["Top 50 positive aspect out of 561 aspects:\n"]},{"data":{"text/plain":["sex    5\n","dtype: int64"]},"execution_count":181,"metadata":{},"output_type":"execute_result"}],"source":["pos_apect_bert_frame = pd.DataFrame(\n","    {'apects': aspects_list,\n","     'sentiment': sentiments_list\n","    })\n","\n","neW_aspects=[]\n","neW_Sentiments=[]\n","for i in pos_apect_bert_frame.index:\n","    asp=pos_apect_bert_frame.loc[i, \"apects\"]\n","    senti=pos_apect_bert_frame.loc[i, \"sentiment\"]\n","    new_aspect= asp.replace('[','').replace(']','')\n","    new_aspect= new_aspect.strip(\"'\")\n","    new_senti= senti.replace('[','').replace(']','')\n","    new_senti= new_senti.strip(\"'\")\n","    neW_aspects.append(new_aspect)\n","    neW_Sentiments.append(new_senti)\n","    \n","df = pd.DataFrame(aspects_list)\n","\n","top_ten_aspect=df.stack().value_counts().sort_values(ascending=[False]).head(50)\n","\n","print('Top 50 positive aspect out of 561 aspects:')\n","\n","\n","top_ten_aspect[[0]]\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FrOLE08We7UU","outputId":"d723bc8b-0c85-452c-e666-4d76f8258338"},"outputs":[{"name":"stdout","output_type":"stream","text":["Positive sentence aspect classification Accuray  93%\n"]},{"data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["sentiments_list\n","count=0\n","for i in sentiments_list:\n","    if i== 'Negative':\n","#         print(i)\n","        count=count+1\n","count\n","print('Positive sentence aspect classification Accuray  93%')\n","\n","# sentiments_list\n","\n","y = np.array([461, 28])\n","mylabels = [\"433 Postive or neutral sentence rightly classified\", \"28 positive sentence Misclassified as negative\"]\n","\n","plt.pie(y, labels = mylabels)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2JeJ-uxke7UV"},"outputs":[],"source":["#negative\n","aspects_list=[]\n","sentiments_list=[]\n","for i in neg_bert_aspect_complete.index:\n","    aspects= neg_bert_aspect_complete.loc[i,\"aspect\"] \n","    aspects= aspects.replace('[','').replace(']','')\n","    aspects= aspects.replace('\"','')\n","    aspects=aspects.split(\",\")\n","    #aspects= aspects.replace('\"','')\n","    aspects=[i.replace('\"','') for i in aspects ]\n","    sentiments= neg_bert_aspect_complete.loc[i,\"sentiment\"]\n","    sentiments= sentiments.replace('[','').replace(']','')\n","    sentiments= sentiments.replace('\"','')\n","    sentiments=sentiments.split(\",\")\n","    #sentiments= sentiments.replace('\"','')\n","    sentiments=[i.replace('\"','') for i in sentiments ]\n","    for j in aspects:\n","        j= j.replace('\"','')\n","        j= j.replace(\"'\",'')\n","        j=j.replace(\" \", \"\")\n","        for t in sentiments:\n","            t= t.replace('\"','')\n","            t= t.replace(\"'\",'')\n","            t=t.replace(\" \", \"\")\n","            aspects_list.append(j)\n","            sentiments_list.append(t)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3VewdTiWe7UV","outputId":"d70a987b-0739-465f-d03b-595cf054fda9"},"outputs":[{"data":{"text/plain":["65"]},"execution_count":132,"metadata":{},"output_type":"execute_result"}],"source":["len(aspects_list)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ypN4yxu-e7UW","outputId":"0f1d1368-0e3d-445b-9259-efb3fdace12c"},"outputs":[{"data":{"text/plain":["['position',\n"," 'sex',\n"," 'mayonnaise',\n"," 'cup',\n"," 'mayonnaise',\n"," 'brakes',\n"," 'drinks',\n"," 'hood',\n"," 'lesbian',\n"," 'lesbian',\n"," 'orlesbian',\n"," 'orlesbian',\n"," 'nigga',\n"," 'drinks',\n"," 'sawedoffshotgun',\n"," 'meat',\n"," 'butt',\n"," 'floor',\n"," 'penis',\n"," 'penis',\n"," 'vagina',\n"," 'vagina',\n"," 'tf',\n"," 'ass',\n"," 'turnons',\n"," 'sex',\n"," 'screen',\n"," 'tampons',\n"," 'stick',\n"," 'food',\n"," 'guy',\n"," 'sex',\n"," 'dick',\n"," 'pussy',\n"," 'hoe',\n"," 'hoe',\n"," 'hoe',\n"," 'hoe',\n"," 'table',\n"," 'butt',\n"," 'bitch',\n"," 'dick',\n"," 'sex',\n"," 'boobs',\n"," 'bar',\n"," 'dick',\n"," 'room',\n"," 'sexpositions',\n"," 'butt',\n"," 'dj',\n"," 'booty',\n"," 'dick',\n"," 'attitude',\n"," 'myvaginaisprettierthan',\n"," 'egg',\n"," 'food',\n"," 'vagina',\n"," 'tits',\n"," 'attitude',\n"," 'foodwater',\n"," 'position',\n"," 'sexposition',\n"," 'c',\n"," 'julia',\n"," 'sex']"]},"execution_count":133,"metadata":{},"output_type":"execute_result"}],"source":["aspects_list"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6bPfIKmje7UW","outputId":"f107043c-55b5-421c-d541-d74562b91480"},"outputs":[{"data":{"text/plain":["65"]},"execution_count":134,"metadata":{},"output_type":"execute_result"}],"source":["len(sentiments_list)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UGr19x_-e7UW","outputId":"1606b922-0858-4362-fa5c-2c83face5afc"},"outputs":[{"data":{"text/plain":["['Positive',\n"," 'Negative',\n"," 'Neutral',\n"," 'Negative',\n"," 'Negative',\n"," 'Negative',\n"," 'Neutral',\n"," 'Negative',\n"," 'Positive',\n"," 'Positive',\n"," 'Positive',\n"," 'Positive',\n"," 'Neutral',\n"," 'Positive',\n"," 'Negative',\n"," 'Neutral',\n"," 'Negative',\n"," 'Neutral',\n"," 'Neutral',\n"," 'Neutral',\n"," 'Neutral',\n"," 'Neutral',\n"," 'Negative',\n"," 'Positive',\n"," 'Neutral',\n"," 'Positive',\n"," 'Neutral',\n"," 'Negative',\n"," 'Negative',\n"," 'Negative',\n"," 'Negative',\n"," 'Neutral',\n"," 'Positive',\n"," 'Negative',\n"," 'Negative',\n"," 'Negative',\n"," 'Negative',\n"," 'Negative',\n"," 'Negative',\n"," 'Positive',\n"," 'Negative',\n"," 'Negative',\n"," 'Positive',\n"," 'Positive',\n"," 'Neutral',\n"," 'Positive',\n"," 'Negative',\n"," 'Positive',\n"," 'Positive',\n"," 'Neutral',\n"," 'Positive',\n"," 'Negative',\n"," 'Negative',\n"," 'Positive',\n"," 'Negative',\n"," 'Negative',\n"," 'Neutral',\n"," 'Positive',\n"," 'Negative',\n"," 'Negative',\n"," 'Positive',\n"," 'Positive',\n"," 'Neutral',\n"," 'Negative',\n"," 'Neutral']"]},"execution_count":135,"metadata":{},"output_type":"execute_result"}],"source":["sentiments_list"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VlRUDkX9e7UX"},"outputs":[],"source":["pos_apect_bert_frame = pd.DataFrame(\n","    {'apects': aspects_list,\n","     'sentiment': sentiments_list\n","    })"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NeufJMIge7UX"},"outputs":[],"source":["neW_aspects=[]\n","neW_Sentiments=[]\n","for i in pos_apect_bert_frame.index:\n","    asp=pos_apect_bert_frame.loc[i, \"apects\"]\n","    senti=pos_apect_bert_frame.loc[i, \"sentiment\"]\n","    new_aspect= asp.replace('[','').replace(']','')\n","    new_aspect= new_aspect.strip(\"'\")\n","    new_senti= senti.replace('[','').replace(']','')\n","    new_senti= new_senti.strip(\"'\")\n","    neW_aspects.append(new_aspect)\n","    neW_Sentiments.append(new_senti)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Zpry06XWe7UX"},"outputs":[],"source":["pos_apect_bert_frame[\"cleaned_aspects\"]=neW_aspects\n","pos_apect_bert_frame[\"cleaned_sentiment\"]=neW_Sentiments"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4VBvAtOBe7UY","outputId":"d2a84724-5c3b-4d9d-d8bc-00fd6f5de37e"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>apects</th>\n","      <th>sentiment</th>\n","      <th>cleaned_aspects</th>\n","      <th>cleaned_sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>position</td>\n","      <td>Positive</td>\n","      <td>position</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>sex</td>\n","      <td>Negative</td>\n","      <td>sex</td>\n","      <td>Negative</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>mayonnaise</td>\n","      <td>Neutral</td>\n","      <td>mayonnaise</td>\n","      <td>Neutral</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>cup</td>\n","      <td>Negative</td>\n","      <td>cup</td>\n","      <td>Negative</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>mayonnaise</td>\n","      <td>Negative</td>\n","      <td>mayonnaise</td>\n","      <td>Negative</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>60</th>\n","      <td>position</td>\n","      <td>Positive</td>\n","      <td>position</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>61</th>\n","      <td>sexposition</td>\n","      <td>Positive</td>\n","      <td>sexposition</td>\n","      <td>Positive</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>c</td>\n","      <td>Neutral</td>\n","      <td>c</td>\n","      <td>Neutral</td>\n","    </tr>\n","    <tr>\n","      <th>63</th>\n","      <td>julia</td>\n","      <td>Negative</td>\n","      <td>julia</td>\n","      <td>Negative</td>\n","    </tr>\n","    <tr>\n","      <th>64</th>\n","      <td>sex</td>\n","      <td>Neutral</td>\n","      <td>sex</td>\n","      <td>Neutral</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>65 rows × 4 columns</p>\n","</div>"],"text/plain":["         apects sentiment cleaned_aspects cleaned_sentiment\n","0      position  Positive        position          Positive\n","1           sex  Negative             sex          Negative\n","2    mayonnaise   Neutral      mayonnaise           Neutral\n","3           cup  Negative             cup          Negative\n","4    mayonnaise  Negative      mayonnaise          Negative\n","..          ...       ...             ...               ...\n","60     position  Positive        position          Positive\n","61  sexposition  Positive     sexposition          Positive\n","62            c   Neutral               c           Neutral\n","63        julia  Negative           julia          Negative\n","64          sex   Neutral             sex           Neutral\n","\n","[65 rows x 4 columns]"]},"execution_count":139,"metadata":{},"output_type":"execute_result"}],"source":["pos_apect_bert_frame"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"04tMs3R7e7UY","outputId":"00b08cd9-c507-4b7d-b63a-774496722509"},"outputs":[{"data":{"text/plain":["sex           5\n","hoe           4\n","dick          4\n","vagina        3\n","butt          3\n","attitude      2\n","food          2\n","mayonnaise    2\n","position      2\n","lesbian       2\n","dtype: int64"]},"execution_count":153,"metadata":{},"output_type":"execute_result"}],"source":["df = pd.DataFrame(aspects_list)\n","\n","top_ten_aspect=df.stack().value_counts().sort_values(ascending=[False]).head(10)\n","\n","top_ten_aspect"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A5I4Zezre7UY","outputId":"38ea287a-bfdc-47dc-90e4-fe77ed5589d3"},"outputs":[{"name":"stdout","output_type":"stream","text":["Negative sentence aspect classification Accuray  43%\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["sentiments_list\n","count=0\n","for i in sentiments_list:\n","    if i== 'Positive' or i== 'Neutral':\n","#         print(i)\n","        count=count+1\n","print('Negative sentence aspect classification Accuray  43%')\n","\n","# sentiments_list\n","\n","y = np.array([28, 37])\n","mylabels = [\"28 Negative sentence rightly classified\", \"37 Negative setntence Misclassified as neutrral or positive\"]\n","\n","plt.pie(y, labels = mylabels)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ATiJ5y6se7UZ"},"outputs":[],"source":["top10_pos_apsect=[\"sex\",\"hoe\", \"dick\",\"butt\",\"vagina\",\"position\", \"attitude\", \"penis\",\"mayonnaise\",\n","                  \"lesbian\"]    \n","def bertsentiment_percentage(term):\n","    Ttotal_aspect_sentiment=0\n","    pos=0\n","    neg=0\n","    neut=0\n","    #retireve corresponding tweet from the posiitve or negative frame:\n","    for i in pos_apect_bert_frame.index:\n","        asp=pos_apect_bert_frame.loc[i, \"cleaned_aspects\"]\n","        senti=pos_apect_bert_frame.loc[i, \"cleaned_sentiment\"]\n","        if term == asp:\n","            Ttotal_aspect_sentiment=Ttotal_aspect_sentiment+1\n","            if senti=='Positive':\n","                pos=pos+1\n","            elif senti=='Neutral':\n","                neut=neut+1\n","            elif senti=='Negative':\n","                neg=neg+1\n","    print(\"Positive percentage: {} %\".format(100*(pos)/(Ttotal_aspect_sentiment)))\n","    print(\"Neutral percentage: {} %\".format(100*(neut)/(Ttotal_aspect_sentiment)))  \n","    print(\"Negative percentage: {} %\".format(100*(neg)/(Ttotal_aspect_sentiment))) "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xvhEGheze7UZ","outputId":"58eb57da-2dea-4876-c61d-7221df3ca7f4"},"outputs":[{"name":"stdout","output_type":"stream","text":["Positive percentage: 40.0 %\n","Neutral percentage: 40.0 %\n","Negative percentage: 20.0 %\n"]}],"source":["bertsentiment_percentage('sex')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IZsBuDRMe7UZ","outputId":"31e781e8-9326-4229-edf9-66a3815ab7e0"},"outputs":[{"name":"stdout","output_type":"stream","text":["Positive percentage: 0.0 %\n","Neutral percentage: 0.0 %\n","Negative percentage: 100.0 %\n"]}],"source":["bertsentiment_percentage('hoe')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ecfWoDTAe7UZ","outputId":"e49cc582-e735-4b44-eff5-6294b00b9108"},"outputs":[{"name":"stdout","output_type":"stream","text":["Positive percentage: 50.0 %\n","Neutral percentage: 0.0 %\n","Negative percentage: 50.0 %\n"]}],"source":["bertsentiment_percentage('dick')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ArQYESKKe7UZ","outputId":"fc800279-95b6-4f54-96f5-047e77dd9ec3"},"outputs":[{"name":"stdout","output_type":"stream","text":["Positive percentage: 66.66666666666667 %\n","Neutral percentage: 0.0 %\n","Negative percentage: 33.333333333333336 %\n"]}],"source":["bertsentiment_percentage('butt')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CS7kFGBpe7Ua","outputId":"50e57ec8-e671-4310-db30-a29c6c1b7ed9"},"outputs":[{"name":"stdout","output_type":"stream","text":["Positive percentage: 100.0 %\n","Neutral percentage: 0.0 %\n","Negative percentage: 0.0 %\n"]}],"source":["bertsentiment_percentage('lesbian')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fNP7niUje7Ua","outputId":"15ec9b2d-a7a7-4784-87ce-015f7138ebad"},"outputs":[{"name":"stdout","output_type":"stream","text":["Positive percentage: 0.0 %\n","Neutral percentage: 100.0 %\n","Negative percentage: 0.0 %\n"]}],"source":["bertsentiment_percentage('vagina')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BE5l-3UKe7Ua","outputId":"252d562e-7b20-4f6f-822f-bd51bcc10cb8"},"outputs":[{"name":"stdout","output_type":"stream","text":["Positive percentage: 0.0 %\n","Neutral percentage: 100.0 %\n","Negative percentage: 0.0 %\n"]}],"source":["bertsentiment_percentage('penis')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JfURuvwIe7Ua","outputId":"11ce3cbb-9796-4313-cf3b-ddc71d0cd41e"},"outputs":[{"name":"stdout","output_type":"stream","text":["Positive percentage: 0.0 %\n","Neutral percentage: 50.0 %\n","Negative percentage: 50.0 %\n"]}],"source":["bertsentiment_percentage('mayonnaise')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FkkfMRCEe7Ua","outputId":"cfd38d8a-e61d-4a67-9cc1-2f4fa58e9cd6"},"outputs":[{"ename":"ModuleNotFoundError","evalue":"No module named 'wordcloud'","output_type":"error","traceback":["\u001b[1;31m---------------------------------------------------------------------------\u001b[0m","\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[1;32m<ipython-input-183-7c96e81b7cd4>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[1;32mimport\u001b[0m \u001b[0mmatplotlib\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mpyplot\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0mplt\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 2\u001b[1;33m \u001b[1;32mfrom\u001b[0m \u001b[0mwordcloud\u001b[0m \u001b[1;32mimport\u001b[0m \u001b[0mWordCloud\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      3\u001b[0m \u001b[0mmy_list\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m\"one\"\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m\"one two\"\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m\"three\"\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      4\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[1;31m#convert list to string and generate\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n","\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'wordcloud'"]}],"source":["!pip install import matplotlib.pyplot as plt\n","from wordcloud import WordCloud\n","my_list=[\"one\", \"one two\", \"three\"]\n","\n","#convert list to string and generate\n","unique_string=(\" \").join(my_list)\n","wordcloud = WordCloud(width = 1000, height = 500).generate(unique_string)\n","plt.figure(figsize=(15,8))\n","plt.imshow(wordcloud)\n","plt.axis(\"off\")\n","plt.savefig(\"your_file_name\"+\".png\", bbox_inches='tight')\n","plt.show()\n","plt.close()"]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.8"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":0}